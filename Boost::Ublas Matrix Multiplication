#include <iostream>
#include <vector>
#include <algorithm>
#include <boost/numeric/ublas/matrix.hpp>
#include <boost/numeric/ublas/operation.hpp>
#include <boost/numeric/ublas/io.hpp>
#include <boost/numeric/ublas/matrix_proxy.hpp>
#include <boost/numeric/ublas/vector_proxy.hpp>
#include <boost/numeric/ublas/matrix.hpp>

using namespace boost::numeric::ublas;
using namespace std;

int main(){

    matrix<float> A(3,1);
    matrix<float> B(1,3);

    A(0,0) = 1;
    A(1,0) =2;
    A(2,0) = 3;
    B(0,0) = 1,
    B(0,1) = 2;
    B(0,2) = 3;

    matrix<float>  C = prod(A,B);

    for(int i =0; i< 3; i++) {
        for (int j=0; j<3;j++){
            cout << C(i,j) << " ";
        }
        cout<<endl;
    }
    return 0;
}
